// Code generated by mockery v1.0.0. DO NOT EDIT.

package v1wallet

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

// AdminWallets provides a mock function with given fields: _a0, _a1
func (_m *MockService) AdminWallets(_a0 context.Context, _a1 *AdminWalletRequestBody) (*AdminWalletResponseBody, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *AdminWalletResponseBody
	if rf, ok := ret.Get(0).(func(context.Context, *AdminWalletRequestBody) *AdminWalletResponseBody); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*AdminWalletResponseBody)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *AdminWalletRequestBody) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Balance provides a mock function with given fields: _a0, _a1
func (_m *MockService) Balance(_a0 context.Context, _a1 *BalanceRequestBody) (*BalanceResponseBody, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *BalanceResponseBody
	if rf, ok := ret.Get(0).(func(context.Context, *BalanceRequestBody) *BalanceResponseBody); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*BalanceResponseBody)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *BalanceRequestBody) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Deposit provides a mock function with given fields: _a0, _a1
func (_m *MockService) Deposit(_a0 context.Context, _a1 *DepositRequestBody) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *DepositRequestBody) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Health provides a mock function with given fields: _a0
func (_m *MockService) Health(_a0 context.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Transfer provides a mock function with given fields: _a0, _a1
func (_m *MockService) Transfer(_a0 context.Context, _a1 *TransferRequestBody) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *TransferRequestBody) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Withdraw provides a mock function with given fields: _a0, _a1
func (_m *MockService) Withdraw(_a0 context.Context, _a1 *WithdrawRequestBody) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *WithdrawRequestBody) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
